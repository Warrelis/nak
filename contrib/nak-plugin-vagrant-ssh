#!/usr/local/bin/python3
import sys
import subprocess
import base64

vm = sys.argv[1]
args = sys.argv[2:]

exited_process = subprocess.run(["vagrant", "ssh-config", vm], check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

res = exited_process.stdout.decode('utf-8').split('\n')

assert res[0].split(' ') == ['Host', vm]

config = {}
for line in res[1:]:
    line = line.strip()
    if ' ' not in line:
        continue
    i = line.index(' ')
    assert i > 0

    config[line[:i]] = line[i:].strip()

def flatten(items):
    res = []
    for i in items:
        if type(i) is list:
            res += flatten(i)
        else:
            res.append(i)
    return res

def pages(block):
    return [block[i*4096:min((i + 1)*4096, len(block))] for i in range(0, (len(block) + 4095)//4096)]

# config['LogLevel'] = 'DEBUG'

ssh_command = flatten(['ssh'] + [['-o', k + '=' + v] for k, v in config.items()] + [config['HostName'], 'sh'])

ssh = subprocess.Popen(ssh_command, stdin=subprocess.PIPE, stdout=subprocess.PIPE)

with open("/Users/joshw/src/github.com/joshuawarner32/nak/bin/linux/backend", 'rb') as f:
    file = f.read()

print(len(file))

ssh.stdin.write("truncate 0 nak-backend\n".encode('utf-8'))
print("a")

for page in pages(file):
    print("loop")
    ssh.stdin.write(("echo " + base64.b64encode(page).decode('utf-8') + " | base64 -d > nak-backend\n").encode('utf-8'))

print("b")
ssh.stdin.write("sha1sum nak-backend\n".encode('utf-8'))

print("c")
while True:
    print("line", ssh.stdout.readline())
