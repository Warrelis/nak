#!/usr/local/bin/python3
import sys
import subprocess
import base64
from threading import Thread

vm = sys.argv[1]
args = sys.argv[2:]

exited_process = subprocess.run(["vagrant", "ssh-config", vm], check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

res = exited_process.stdout.decode('utf-8').split('\n')

assert res[0].split(' ') == ['Host', vm]

config = {}
for line in res[1:]:
    line = line.strip()
    if ' ' not in line:
        continue
    i = line.index(' ')
    assert i > 0

    config[line[:i]] = line[i:].strip()

def flatten(items):
    res = []
    for i in items:
        if type(i) is list:
            res += flatten(i)
        else:
            res.append(i)
    return res

def pages(block):
    return [block[i*4096:min((i + 1)*4096, len(block))] for i in range(0, (len(block) + 4095)//4096)]

# config['LogLevel'] = 'DEBUG'

with open("/Users/joshw/src/github.com/joshuawarner32/nak/bin/linux/backend", 'rb') as f:
    file = f.read()

def do(cmd, file):
    ssh_command = flatten(['ssh'] + [['-o', k + '=' + v] for k, v in config.items()] + [config['HostName']] + cmd)
    proc = subprocess.Popen(ssh_command, stdin=subprocess.PIPE, stdout=subprocess.PIPE)
    proc.stdin.write(file)
    outs, errs = proc.communicate()
    assert errs is None
    return outs

if 'linux' in vm or 'ubuntu' in vm:
    do(['sh', '-c', 'cat > nak-backend'], file)
    assert b'ef7c0f50de0ef0f7892cb894f3bbd95de0a826e3  nak-backend\n' == do(['sha1sum nak-backend'], b'')
    do(['chmod', '+x', 'nak-backend'], b'')
    do(['chmod', '+x', 'nak-backend'], b'')

    ssh_command = flatten(['ssh'] + [['-o', k + '=' + v] for k, v in config.items()] + [config['HostName'], './nak-backend'])
elif 'win' in vm:
    ssh_command = flatten(['ssh'] + [['-o', k + '=' + v] for k, v in config.items()] + [config['HostName'], '/cygdrive/c/Users/vagrant/nak/nak/target/debug/backend'])
else:
    assert False
proc = subprocess.Popen(ssh_command)
proc.wait()
